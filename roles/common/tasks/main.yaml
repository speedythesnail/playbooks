- name: Apt pre-requisites (Debian Systems)
  ansible.builtin.package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
    state: present
  become: true
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Enable CodeReady Builder repository (RedHat Systems)
  community.general.rhsm_repository:
    name: codeready-builder-for-rhel-9-{{ ansible_architecture }}-rpms
    state: enabled
  become: true
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "9"

- name: Install EPEL repository using dnf  (RedHat Systems)
  ansible.builtin.dnf:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
    state: present
  become: true
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "9"

- name: Add 1Password repository (RedHat Systems)
  ansible.builtin.yum_repository:
    name: 1password
    description: '1Password Stable Channel'
    baseurl: https://downloads.1password.com/linux/rpm/stable/$basearch
    enabled: true
    gpgcheck: true
    gpgkey: https://downloads.1password.com/linux/keys/1password.asc
    file: 1password
  become: true
  when: ansible_distribution in ["RedHat", "CentOS", "Fedora"]

- name: Add 1Password repository (Debian-Systems)
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://downloads.1password.com/linux/debian stable main
    state: present
    filename: 1password
  become: true
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Add 1Password GPG key (Debian-Systems)
  ansible.builtin.apt_key:
    url: https://downloads.1password.com/linux/keys/1password.asc
    state: present
  become: true
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Install packages
  ansible.builtin.package:
    name:
      - 1password
      - firefox
      - kitty
      - thunderbird
      - unzip
      - vim
    state: present
  become: true

- name: Set Timezone to America/New_York
  community.general.timezone:
    name: America/New_York
  become: true

- name: Ensure directories in home exists
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
  become: false
  with_items:
    - '{{ ansible_env.HOME }}'
    - '{{ ansible_env.HOME }}/.config'
    - '{{ ansible_env.HOME }}/.local'
    - '{{ ansible_env.HOME }}/.local/bin'

- name: Copy files to home dir
  ansible.builtin.copy:
    src: 'files/{{ item.name }}'
    dest: '{{ ansible_env.HOME }}/{{ item.dest }}'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: '{{ item.mode }}'
  with_items:
    - { name: 'vimrc', dest: '.vimrc', mode: '0700' }
    - { name: 'bash_aliases', dest: '.bash_aliases', mode: '0600' }
    - { name: 'bash_profile', dest: '.bash_profile', mode: '0600' }
    - { name: 'bashrc', dest: '.bashrc', mode: '0600' }

- name: Install ShellTech.net CA cert
  ansible.builtin.copy:
    src: 'files/shelltech-ca.crt'
    dest: /etc/pki/ca-trust/source/anchors/shelltech-ca.crt
    owner: 'root'
    group: 'root'
    mode: '0644'
  become: true
  notify: update trusted ca cert
